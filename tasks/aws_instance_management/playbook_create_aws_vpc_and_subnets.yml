---
#
# EECS 5287: Principles of Cloud Computing
# Author: Adam Catalfano, Abhinav Jambulingam
# Created: Fall 2021
#
# Create VPC and Subnets on AWS
#

# - name: Include Group Name variables
#   ansible.builtin.include_vars: ../../variables/group_names.yml

# - name: Include AWS variables
#   ansible.builtin.include_vars: ../../variables/aws_vars.yml

# # - name: Include config

- name: Create VPC
  amazon.aws.ec2_vpc_net:
    name: my_vpc
    cidr_block: "{{ vpcCIDR }}"
    region: us-east-1
  register: myVpc


# - name: Get all vars
#   debug:
#     # msg: "{{ lookup('varnames', '.*') }}"
#     msg: "{{ lookup('vars', item) }}"
#   loop: "{{ lookup('varnames', '.*') | split(',') }}"
# - name: Include Local Var Names
#   ansible.builtin.include_vars: ../../variables/local_var_names.yml

# - name: Set IDs Fact
#   ansible.builtin.set_fact:
#     key_value: "{{ runningInstanceIds }}: [ {{ master_instance }}, {{ regular_instance }} ]"

# - name: check type of varnames lookup
#   vars:
#     x: "{{ lookup('varnames', '.*') | split(',') }}"
#   debug:
#     msg: "{{ x | type_debug }}"

- name: Write VPC ID to local variables file
  vars:
    varname: "{{ vpcId }}"
    varval: "{{ myVpc.vpc.id }}"
  ansible.builtin.include_tasks: ../playbook_write_local_vars_file.yml

- name: Set VPC ID as Fact
  ansible.builtin.set_fact:
    key_value: "{{ vpcId }}: {{ myVpc.vpc.id }}"

- name: what is myvpc.vpc.id?
  debug:
    msg: "{{ myVpc.vpc.id }}"

- name: also print all varnames!
  debug:
    msg: "{{ lookup('varnames', '.*') }}"

- name: Write VPC name to local variables file
  vars:
    varname: "{{ vpc }}"
    varval: my_vpc
  ansible.builtin.include_tasks: ../playbook_write_local_vars_file.yml

- name: Import subnet config
  ansible.builtin.include_vars: ../../configs/subnets.yml

- name: Create Subnets
  amazon.aws.ec2_vpc_subnet:
    state: present
    vpc_id: "{{ myVpc.vpc.id }}" # "{{ lookup('vars', vpcId) }}" #"{{ myVpc.vpc.id }}"
    cidr: "{{ item }}"
    region: us-east-1
  loop: "{{ subnets | dict2items(key_name='k') | community.general.json_query('[*].k') }}"
  loop_control:
    index_var: idx
  register: subnetsCollection

# - name: debug subnetsCollection
#   debug:
#     msg: "{{ subnetsCollection | json_query('results[*].item') }}"

- name: Write subnet cidrs to local variables file
  vars:
    varname: "{{ subnetCidrs }}"
    varval: "{{ subnetsCollection.results | json_query('[*].subnet.cidr_block') | list | to_yaml }}"
  ansible.builtin.include_tasks: ../playbook_write_local_vars_file.yml



# TODO: writing subnets as: vvvv
# subnets:
# - name: str
#   cidr: str
# - name: str
#   cidr: str

# - name: Provision master/vm2 instance
#   vars:
#     name: "{{  'master_vm2' + item }}"
#     instanceFlavor: t2.small
#     instanceFactName: master_instance
#     secGroupList:
#     - "{{ test_allSG.name }}"
#   ansible.builtin.include_tasks: ./playbook_provision_aws_template.yml
#   loop: "{{ range(5) }}"

# - name: write AWS public IPs to Inventory
#   ansible.builtin.replace:
#     path: '~/Inventory'
#     regexp: '(?<=^\[{{ item.lineBefore }}\]\n)(\d+\.){3}\d+'
#     replace: '{{ item.publicIP }}'
#   loop:
#   - lineBefore: Remote1
#     publicIP: "{{ master_instance.public_ip_address }}"
#   - lineBefore: Remote2
#     publicIP: "{{ regular_instance.public_ip_address }}"

# - name: Refresh the updated Inventory File
#   ansible.builtin.meta: refresh_inventory

# # - name: Add new instances to all_remote and all_remote_and_producers group
# #   ansible.builtin.add_host:
# #     hostname: "{{ item.public_ip_address }}"
# #     groups:
# #     - "{{ allRemote }}"
# #     - "{{ allRemoteAndProducers }}"
# #   loop: [ "{{ master_instance }}", "{{ regular_instance }}" ]

# - name: Add instances to appropriate vm2 and vm3 groups and to all_remote and all_remote_and_producers
#   ansible.builtin.add_host:
#     hostname: "{{ item.0.public_ip_address }}"
#     groups:
#     - "{{ item.1 }}"
#     - "{{ allRemote }}"
#     - "{{ allRemoteAndProducers }}"
#   with_together:
#   - [ "{{ master_instance }}", "{{ regular_instance }}" ]
#   - [ "{{ kafka1ZookeeperConsumer }}", "{{ kafka2CouchDB }}" ]

# - name: Add master to k8s_remote_and_producer_masters
#   ansible.builtin.add_host:
#     hostname: "{{ master_instance.public_ip_address }}"
#     group: "{{ k8sRemoteAndProducerMasters }}"

# # - name: Add producers to all_remote_and_producers group
# #   ansible.builtin.add_host:
# #     hostname: "{{ item }}"
# #     ansible_connection: ssh
# #     ansible_user: vagrant
# #     ansible_ssh_private_key_file: "{{ producerPrivateKeyFile }}"
# #     group: "{{ allRemoteAndProducers }}"
# #   loop:
# #   - producer1
# #   - producer2

# - name: set ips as facts
#   ansible.builtin.set_fact:
#     "{{ zookeeperIp }}": "{{ master_instance.public_ip_address }}"
#     "{{ couchdbIp }}": "{{ regular_instance.public_ip_address }}"
#     "{{ zookeeper_private_ip }}": "{{ master_instance.private_ip_address }}"
#     "{{ couchdb_private_ip }}": "{{ regular_instance.private_ip_address }}"

# - name: Pause for deployment
#   ansible.builtin.pause:
#     seconds: 30

# - name: Wait for SSH to come up
#   debugger: on_failed
#   delegate_to: "{{ item.public_dns_name }}"
#   ansible.builtin.wait_for:
#     timeout: 60
#     port: 22
#     state: started
#   loop: [ "{{ master_instance }}", "{{ regular_instance }}" ]

# - name: Include Local Var Names
#   ansible.builtin.include_vars: ../../variables/local_var_names.yml

# - name: Set IDs Fact
#   ansible.builtin.set_fact:
#     key_value: "{{ runningInstanceIds }}: [ {{ master_instance }}, {{ regular_instance }} ]"


# - name: Write EC2 IDs to local variables file
#   vars:
#     instance_ids:
#     - "{{ master_instance.instance_id }}"
#     - "{{ regular_instance.instance_id }}"
#   ansible.builtin.include_tasks: ../playbook_write_local_vars_file.yml
...
